#[prelude_import]
use std::prelude::rust_2021::*;
#[macro_use]
extern crate std;
use ::{};
use solana_program::account_info::AccountInfo;
use solana_program::entrypoint;
use solana_program::entrypoint::ProgramResult;
use solana_program::msg;
use solana_program::pubkey::Pubkey;

// Tells Solana that the entrypoint to this program
//  is the "process_instruction" function.
//

// Our entrypoint's parameters have to match the
//  anatomy of a transaction instruction (see README).
//




/// # Safety
#[no_mangle]
unsafe extern "C" fn entrypoint(input: *mut u8)
    ->
        u64 {
        let (program_id, accounts, instruction_data) =
            unsafe { ::solana_program::entrypoint::deserialize(input) };
        match process_instruction(&program_id, &accounts, &instruction_data) {
                Ok(()) => ::solana_program::entrypoint::SUCCESS,
                Err(error) => error.into(),
            }
    }
fn process_instruction<'_, '_, '_,
    '_>(program_id: &'_ Pubkey, _accounts: &'_ [AccountInfo<>],
    _instruction_data: &'_ [u8]) -> ProgramResult { Ok(()) }
